/*
SoundCloud Public API Specification

Discover and play over 320 million music tracks. Join the world’s largest online community of artists, bands, DJs, and audio creators.

The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { TrackDataRequest } from './track-data-request';

/**
 * 
 * @export
 * @interface TracksUploadNewTrackRequest1
 */
export interface TracksUploadNewTrackRequest1 {
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[title]': string;
    /**
     * 
     * @type {Uint8Array | File | buffer.File}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[asset_data]': Uint8Array | File | buffer.File;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[permalink]'?: string;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[sharing]'?: TracksUploadNewTrackRequest1TrackSharingEnum;
    /**
     * who can embed this track \"all\", \"me\", or \"none\"
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[embeddable_by]'?: TracksUploadNewTrackRequest1TrackEmbeddableByEnum;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[purchase_url]'?: string;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[description]'?: string;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[genre]'?: string;
    /**
     * The tag_list property contains a list of tags separated by spaces. Multiword tags are quoted in double quotes. We also support machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example: geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags are not revealed to the user on the track pages.
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[tag_list]'?: string;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[label_name]'?: string;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[release]'?: string;
    /**
     * string, formatted as yyyy-mm-dd, representing release date
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[release_date]'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[streamable]'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[downloadable]'?: boolean;
    /**
     * Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[license]'?: TracksUploadNewTrackRequest1TrackLicenseEnum;
    /**
     * 
     * @type {boolean}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[commentable]'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[isrc]'?: string;
    /**
     * 
     * @type {Uint8Array | File | buffer.File}
     * @memberof TracksUploadNewTrackRequest1
     */
    'track[artwork_data]'?: Uint8Array | File | buffer.File;
}

type TracksUploadNewTrackRequest1TrackSharingEnum = 'public' | 'private'
type TracksUploadNewTrackRequest1TrackEmbeddableByEnum = 'all' | 'me' | 'none'
type TracksUploadNewTrackRequest1TrackLicenseEnum = 'no-rights-reserved' | 'all-rights-reserved' | 'cc-by' | 'cc-by-nc' | 'cc-by-nd' | 'cc-by-sa' | 'cc-by-nc-nd' | 'cc-by-nc-sa'


